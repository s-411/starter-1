"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@date-fns";
exports.ids = ["vendor-chunks/@date-fns"];
exports.modules = {

/***/ "(ssr)/./node_modules/@date-fns/tz/constants/index.js":
/*!******************************************************!*\
  !*** ./node_modules/@date-fns/tz/constants/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   constructFromSymbol: () => (/* binding */ constructFromSymbol)\n/* harmony export */ });\n/**\n * The symbol to access the `TZDate`'s function to construct a new instance from\n * the provided value. It helps date-fns to inherit the time zone.\n */\nconst constructFromSymbol = Symbol.for(\"constructDateFrom\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRhdGUtZm5zL3R6L2NvbnN0YW50cy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDTyIsInNvdXJjZXMiOlsiL1VzZXJzL3N0ZXZlaGFycmlzL0RvY3VtZW50cy9HaXRIdWIvc3RhcnRlci0xL2RlbW8tYXBwL25vZGVfbW9kdWxlcy9AZGF0ZS1mbnMvdHovY29uc3RhbnRzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhlIHN5bWJvbCB0byBhY2Nlc3MgdGhlIGBUWkRhdGVgJ3MgZnVuY3Rpb24gdG8gY29uc3RydWN0IGEgbmV3IGluc3RhbmNlIGZyb21cbiAqIHRoZSBwcm92aWRlZCB2YWx1ZS4gSXQgaGVscHMgZGF0ZS1mbnMgdG8gaW5oZXJpdCB0aGUgdGltZSB6b25lLlxuICovXG5leHBvcnQgY29uc3QgY29uc3RydWN0RnJvbVN5bWJvbCA9IFN5bWJvbC5mb3IoXCJjb25zdHJ1Y3REYXRlRnJvbVwiKTsiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@date-fns/tz/constants/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@date-fns/tz/date/index.js":
/*!*************************************************!*\
  !*** ./node_modules/@date-fns/tz/date/index.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TZDate: () => (/* binding */ TZDate)\n/* harmony export */ });\n/* harmony import */ var _tzName_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tzName/index.js */ \"(ssr)/./node_modules/@date-fns/tz/tzName/index.js\");\n/* harmony import */ var _mini_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mini.js */ \"(ssr)/./node_modules/@date-fns/tz/date/mini.js\");\n\n\nclass TZDate extends _mini_js__WEBPACK_IMPORTED_MODULE_1__.TZDateMini {\n  //#region static\n\n  static tz(tz, ...args) {\n    return args.length ? new TZDate(...args, tz) : new TZDate(Date.now(), tz);\n  }\n\n  //#endregion\n\n  //#region representation\n\n  toISOString() {\n    const [sign, hours, minutes] = this.tzComponents();\n    const tz = `${sign}${hours}:${minutes}`;\n    return this.internal.toISOString().slice(0, -1) + tz;\n  }\n  toString() {\n    // \"Tue Aug 13 2024 07:50:19 GMT+0800 (Singapore Standard Time)\";\n    return `${this.toDateString()} ${this.toTimeString()}`;\n  }\n  toDateString() {\n    // toUTCString returns RFC 7231 (\"Mon, 12 Aug 2024 23:36:08 GMT\")\n    const [day, date, month, year] = this.internal.toUTCString().split(\" \");\n    // \"Tue Aug 13 2024\"\n    return `${day?.slice(0, -1) /* Remove \",\" */} ${month} ${date} ${year}`;\n  }\n  toTimeString() {\n    // toUTCString returns RFC 7231 (\"Mon, 12 Aug 2024 23:36:08 GMT\")\n    const time = this.internal.toUTCString().split(\" \")[4];\n    const [sign, hours, minutes] = this.tzComponents();\n    // \"07:42:23 GMT+0800 (Singapore Standard Time)\"\n    return `${time} GMT${sign}${hours}${minutes} (${(0,_tzName_index_js__WEBPACK_IMPORTED_MODULE_0__.tzName)(this.timeZone, this)})`;\n  }\n  toLocaleString(locales, options) {\n    return Date.prototype.toLocaleString.call(this, locales, {\n      ...options,\n      timeZone: options?.timeZone || this.timeZone\n    });\n  }\n  toLocaleDateString(locales, options) {\n    return Date.prototype.toLocaleDateString.call(this, locales, {\n      ...options,\n      timeZone: options?.timeZone || this.timeZone\n    });\n  }\n  toLocaleTimeString(locales, options) {\n    return Date.prototype.toLocaleTimeString.call(this, locales, {\n      ...options,\n      timeZone: options?.timeZone || this.timeZone\n    });\n  }\n\n  //#endregion\n\n  //#region private\n\n  tzComponents() {\n    const offset = this.getTimezoneOffset();\n    const sign = offset > 0 ? \"-\" : \"+\";\n    const hours = String(Math.floor(Math.abs(offset) / 60)).padStart(2, \"0\");\n    const minutes = String(Math.abs(offset) % 60).padStart(2, \"0\");\n    return [sign, hours, minutes];\n  }\n\n  //#endregion\n\n  withTimeZone(timeZone) {\n    return new TZDate(+this, timeZone);\n  }\n\n  //#region date-fns integration\n\n  [Symbol.for(\"constructDateFrom\")](date) {\n    return new TZDate(+new Date(date), this.timeZone);\n  }\n\n  //#endregion\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRhdGUtZm5zL3R6L2RhdGUvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTRDO0FBQ0w7QUFDaEMscUJBQXFCLGdEQUFVO0FBQ3RDOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0Esa0JBQWtCLEtBQUssRUFBRSxNQUFNLEdBQUcsUUFBUTtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMscUJBQXFCLEVBQUUsb0JBQW9CO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLG9DQUFvQyxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUUsS0FBSztBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLE1BQU0sS0FBSyxLQUFLLEVBQUUsTUFBTSxFQUFFLFNBQVMsR0FBRyx3REFBTSxzQkFBc0I7QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvc3RldmVoYXJyaXMvRG9jdW1lbnRzL0dpdEh1Yi9zdGFydGVyLTEvZGVtby1hcHAvbm9kZV9tb2R1bGVzL0BkYXRlLWZucy90ei9kYXRlL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHR6TmFtZSB9IGZyb20gXCIuLi90ek5hbWUvaW5kZXguanNcIjtcbmltcG9ydCB7IFRaRGF0ZU1pbmkgfSBmcm9tIFwiLi9taW5pLmpzXCI7XG5leHBvcnQgY2xhc3MgVFpEYXRlIGV4dGVuZHMgVFpEYXRlTWluaSB7XG4gIC8vI3JlZ2lvbiBzdGF0aWNcblxuICBzdGF0aWMgdHoodHosIC4uLmFyZ3MpIHtcbiAgICByZXR1cm4gYXJncy5sZW5ndGggPyBuZXcgVFpEYXRlKC4uLmFyZ3MsIHR6KSA6IG5ldyBUWkRhdGUoRGF0ZS5ub3coKSwgdHopO1xuICB9XG5cbiAgLy8jZW5kcmVnaW9uXG5cbiAgLy8jcmVnaW9uIHJlcHJlc2VudGF0aW9uXG5cbiAgdG9JU09TdHJpbmcoKSB7XG4gICAgY29uc3QgW3NpZ24sIGhvdXJzLCBtaW51dGVzXSA9IHRoaXMudHpDb21wb25lbnRzKCk7XG4gICAgY29uc3QgdHogPSBgJHtzaWdufSR7aG91cnN9OiR7bWludXRlc31gO1xuICAgIHJldHVybiB0aGlzLmludGVybmFsLnRvSVNPU3RyaW5nKCkuc2xpY2UoMCwgLTEpICsgdHo7XG4gIH1cbiAgdG9TdHJpbmcoKSB7XG4gICAgLy8gXCJUdWUgQXVnIDEzIDIwMjQgMDc6NTA6MTkgR01UKzA4MDAgKFNpbmdhcG9yZSBTdGFuZGFyZCBUaW1lKVwiO1xuICAgIHJldHVybiBgJHt0aGlzLnRvRGF0ZVN0cmluZygpfSAke3RoaXMudG9UaW1lU3RyaW5nKCl9YDtcbiAgfVxuICB0b0RhdGVTdHJpbmcoKSB7XG4gICAgLy8gdG9VVENTdHJpbmcgcmV0dXJucyBSRkMgNzIzMSAoXCJNb24sIDEyIEF1ZyAyMDI0IDIzOjM2OjA4IEdNVFwiKVxuICAgIGNvbnN0IFtkYXksIGRhdGUsIG1vbnRoLCB5ZWFyXSA9IHRoaXMuaW50ZXJuYWwudG9VVENTdHJpbmcoKS5zcGxpdChcIiBcIik7XG4gICAgLy8gXCJUdWUgQXVnIDEzIDIwMjRcIlxuICAgIHJldHVybiBgJHtkYXk/LnNsaWNlKDAsIC0xKSAvKiBSZW1vdmUgXCIsXCIgKi99ICR7bW9udGh9ICR7ZGF0ZX0gJHt5ZWFyfWA7XG4gIH1cbiAgdG9UaW1lU3RyaW5nKCkge1xuICAgIC8vIHRvVVRDU3RyaW5nIHJldHVybnMgUkZDIDcyMzEgKFwiTW9uLCAxMiBBdWcgMjAyNCAyMzozNjowOCBHTVRcIilcbiAgICBjb25zdCB0aW1lID0gdGhpcy5pbnRlcm5hbC50b1VUQ1N0cmluZygpLnNwbGl0KFwiIFwiKVs0XTtcbiAgICBjb25zdCBbc2lnbiwgaG91cnMsIG1pbnV0ZXNdID0gdGhpcy50ekNvbXBvbmVudHMoKTtcbiAgICAvLyBcIjA3OjQyOjIzIEdNVCswODAwIChTaW5nYXBvcmUgU3RhbmRhcmQgVGltZSlcIlxuICAgIHJldHVybiBgJHt0aW1lfSBHTVQke3NpZ259JHtob3Vyc30ke21pbnV0ZXN9ICgke3R6TmFtZSh0aGlzLnRpbWVab25lLCB0aGlzKX0pYDtcbiAgfVxuICB0b0xvY2FsZVN0cmluZyhsb2NhbGVzLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIERhdGUucHJvdG90eXBlLnRvTG9jYWxlU3RyaW5nLmNhbGwodGhpcywgbG9jYWxlcywge1xuICAgICAgLi4ub3B0aW9ucyxcbiAgICAgIHRpbWVab25lOiBvcHRpb25zPy50aW1lWm9uZSB8fCB0aGlzLnRpbWVab25lXG4gICAgfSk7XG4gIH1cbiAgdG9Mb2NhbGVEYXRlU3RyaW5nKGxvY2FsZXMsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gRGF0ZS5wcm90b3R5cGUudG9Mb2NhbGVEYXRlU3RyaW5nLmNhbGwodGhpcywgbG9jYWxlcywge1xuICAgICAgLi4ub3B0aW9ucyxcbiAgICAgIHRpbWVab25lOiBvcHRpb25zPy50aW1lWm9uZSB8fCB0aGlzLnRpbWVab25lXG4gICAgfSk7XG4gIH1cbiAgdG9Mb2NhbGVUaW1lU3RyaW5nKGxvY2FsZXMsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gRGF0ZS5wcm90b3R5cGUudG9Mb2NhbGVUaW1lU3RyaW5nLmNhbGwodGhpcywgbG9jYWxlcywge1xuICAgICAgLi4ub3B0aW9ucyxcbiAgICAgIHRpbWVab25lOiBvcHRpb25zPy50aW1lWm9uZSB8fCB0aGlzLnRpbWVab25lXG4gICAgfSk7XG4gIH1cblxuICAvLyNlbmRyZWdpb25cblxuICAvLyNyZWdpb24gcHJpdmF0ZVxuXG4gIHR6Q29tcG9uZW50cygpIHtcbiAgICBjb25zdCBvZmZzZXQgPSB0aGlzLmdldFRpbWV6b25lT2Zmc2V0KCk7XG4gICAgY29uc3Qgc2lnbiA9IG9mZnNldCA+IDAgPyBcIi1cIiA6IFwiK1wiO1xuICAgIGNvbnN0IGhvdXJzID0gU3RyaW5nKE1hdGguZmxvb3IoTWF0aC5hYnMob2Zmc2V0KSAvIDYwKSkucGFkU3RhcnQoMiwgXCIwXCIpO1xuICAgIGNvbnN0IG1pbnV0ZXMgPSBTdHJpbmcoTWF0aC5hYnMob2Zmc2V0KSAlIDYwKS5wYWRTdGFydCgyLCBcIjBcIik7XG4gICAgcmV0dXJuIFtzaWduLCBob3VycywgbWludXRlc107XG4gIH1cblxuICAvLyNlbmRyZWdpb25cblxuICB3aXRoVGltZVpvbmUodGltZVpvbmUpIHtcbiAgICByZXR1cm4gbmV3IFRaRGF0ZSgrdGhpcywgdGltZVpvbmUpO1xuICB9XG5cbiAgLy8jcmVnaW9uIGRhdGUtZm5zIGludGVncmF0aW9uXG5cbiAgW1N5bWJvbC5mb3IoXCJjb25zdHJ1Y3REYXRlRnJvbVwiKV0oZGF0ZSkge1xuICAgIHJldHVybiBuZXcgVFpEYXRlKCtuZXcgRGF0ZShkYXRlKSwgdGhpcy50aW1lWm9uZSk7XG4gIH1cblxuICAvLyNlbmRyZWdpb25cbn0iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@date-fns/tz/date/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@date-fns/tz/date/mini.js":
/*!************************************************!*\
  !*** ./node_modules/@date-fns/tz/date/mini.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TZDateMini: () => (/* binding */ TZDateMini)\n/* harmony export */ });\n/* harmony import */ var _tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tzOffset/index.js */ \"(ssr)/./node_modules/@date-fns/tz/tzOffset/index.js\");\n\nclass TZDateMini extends Date {\n  //#region static\n\n  constructor(...args) {\n    super();\n    if (args.length > 1 && typeof args[args.length - 1] === \"string\") {\n      this.timeZone = args.pop();\n    }\n    this.internal = new Date();\n    if (isNaN((0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(this.timeZone, this))) {\n      this.setTime(NaN);\n    } else {\n      if (!args.length) {\n        this.setTime(Date.now());\n      } else if (typeof args[0] === \"number\" && (args.length === 1 || args.length === 2 && typeof args[1] !== \"number\")) {\n        this.setTime(args[0]);\n      } else if (typeof args[0] === \"string\") {\n        this.setTime(+new Date(args[0]));\n      } else if (args[0] instanceof Date) {\n        this.setTime(+args[0]);\n      } else {\n        this.setTime(+new Date(...args));\n        adjustToSystemTZ(this, NaN);\n        syncToInternal(this);\n      }\n    }\n  }\n  static tz(tz, ...args) {\n    return args.length ? new TZDateMini(...args, tz) : new TZDateMini(Date.now(), tz);\n  }\n\n  //#endregion\n\n  //#region time zone\n\n  withTimeZone(timeZone) {\n    return new TZDateMini(+this, timeZone);\n  }\n  getTimezoneOffset() {\n    const offset = -(0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(this.timeZone, this);\n    // Remove the seconds offset\n    // use Math.floor for negative GMT timezones and Math.ceil for positive GMT timezones.\n    return offset > 0 ? Math.floor(offset) : Math.ceil(offset);\n  }\n\n  //#endregion\n\n  //#region time\n\n  setTime(time) {\n    Date.prototype.setTime.apply(this, arguments);\n    syncToInternal(this);\n    return +this;\n  }\n\n  //#endregion\n\n  //#region date-fns integration\n\n  [Symbol.for(\"constructDateFrom\")](date) {\n    return new TZDateMini(+new Date(date), this.timeZone);\n  }\n\n  //#endregion\n}\n\n// Assign getters and setters\nconst re = /^(get|set)(?!UTC)/;\nObject.getOwnPropertyNames(Date.prototype).forEach(method => {\n  if (!re.test(method)) return;\n  const utcMethod = method.replace(re, \"$1UTC\");\n  // Filter out methods without UTC counterparts\n  if (!TZDateMini.prototype[utcMethod]) return;\n  if (method.startsWith(\"get\")) {\n    // Delegate to internal date's UTC method\n    TZDateMini.prototype[method] = function () {\n      return this.internal[utcMethod]();\n    };\n  } else {\n    // Assign regular setter\n    TZDateMini.prototype[method] = function () {\n      Date.prototype[utcMethod].apply(this.internal, arguments);\n      syncFromInternal(this);\n      return +this;\n    };\n\n    // Assign UTC setter\n    TZDateMini.prototype[utcMethod] = function () {\n      Date.prototype[utcMethod].apply(this, arguments);\n      syncToInternal(this);\n      return +this;\n    };\n  }\n});\n\n/**\n * Function syncs time to internal date, applying the time zone offset.\n *\n * @param {Date} date - Date to sync\n */\nfunction syncToInternal(date) {\n  date.internal.setTime(+date);\n  date.internal.setUTCSeconds(date.internal.getUTCSeconds() - Math.round(-(0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(date.timeZone, date) * 60));\n}\n\n/**\n * Function syncs the internal date UTC values to the date. It allows to get\n * accurate timestamp value.\n *\n * @param {Date} date - The date to sync\n */\nfunction syncFromInternal(date) {\n  // First we transpose the internal values\n  Date.prototype.setFullYear.call(date, date.internal.getUTCFullYear(), date.internal.getUTCMonth(), date.internal.getUTCDate());\n  Date.prototype.setHours.call(date, date.internal.getUTCHours(), date.internal.getUTCMinutes(), date.internal.getUTCSeconds(), date.internal.getUTCMilliseconds());\n\n  // Now we have to adjust the date to the system time zone\n  adjustToSystemTZ(date);\n}\n\n/**\n * Function adjusts the date to the system time zone. It uses the time zone\n * differences to calculate the offset and adjust the date.\n *\n * @param {Date} date - Date to adjust\n */\nfunction adjustToSystemTZ(date) {\n  // Save the time zone offset before all the adjustments\n  const baseOffset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(date.timeZone, date);\n  // Remove the seconds offset\n  // use Math.floor for negative GMT timezones and Math.ceil for positive GMT timezones.\n  const offset = baseOffset > 0 ? Math.floor(baseOffset) : Math.ceil(baseOffset);\n  //#region System DST adjustment\n\n  // The biggest problem with using the system time zone is that when we create\n  // a date from internal values stored in UTC, the system time zone might end\n  // up on the DST hour:\n  //\n  //   $ TZ=America/New_York node\n  //   > new Date(2020, 2, 8, 1).toString()\n  //   'Sun Mar 08 2020 01:00:00 GMT-0500 (Eastern Standard Time)'\n  //   > new Date(2020, 2, 8, 2).toString()\n  //   'Sun Mar 08 2020 03:00:00 GMT-0400 (Eastern Daylight Time)'\n  //   > new Date(2020, 2, 8, 3).toString()\n  //   'Sun Mar 08 2020 03:00:00 GMT-0400 (Eastern Daylight Time)'\n  //   > new Date(2020, 2, 8, 4).toString()\n  //   'Sun Mar 08 2020 04:00:00 GMT-0400 (Eastern Daylight Time)'\n  //\n  // Here we get the same hour for both 2 and 3, because the system time zone\n  // has DST beginning at 8 March 2020, 2 a.m. and jumps to 3 a.m. So we have\n  // to adjust the internal date to reflect that.\n  //\n  // However we want to adjust only if that's the DST hour the change happenes,\n  // not the hour where DST moves to.\n\n  // We calculate the previous hour to see if the time zone offset has changed\n  // and we have landed on the DST hour.\n  const prevHour = new Date(+date);\n  // We use UTC methods here as we don't want to land on the same hour again\n  // in case of DST.\n  prevHour.setUTCHours(prevHour.getUTCHours() - 1);\n\n  // Calculate if we are on the system DST hour.\n  const systemOffset = -new Date(+date).getTimezoneOffset();\n  const prevHourSystemOffset = -new Date(+prevHour).getTimezoneOffset();\n  const systemDSTChange = systemOffset - prevHourSystemOffset;\n  // Detect the DST shift. System DST change will occur both on\n  const dstShift = Date.prototype.getHours.apply(date) !== date.internal.getUTCHours();\n\n  // Move the internal date when we are on the system DST hour.\n  if (systemDSTChange && dstShift) date.internal.setUTCMinutes(date.internal.getUTCMinutes() + systemDSTChange);\n\n  //#endregion\n\n  //#region System diff adjustment\n\n  // Now we need to adjust the date, since we just applied internal values.\n  // We need to calculate the difference between the system and date time zones\n  // and apply it to the date.\n\n  const offsetDiff = systemOffset - offset;\n  if (offsetDiff) Date.prototype.setUTCMinutes.call(date, Date.prototype.getUTCMinutes.call(date) + offsetDiff);\n\n  //#endregion\n\n  //#region Seconds System diff adjustment\n\n  const systemDate = new Date(+date);\n  // Set the UTC seconds to 0 to isolate the timezone offset in seconds.\n  systemDate.setUTCSeconds(0);\n  // For negative systemOffset, invert the seconds.\n  const systemSecondsOffset = systemOffset > 0 ? systemDate.getSeconds() : (systemDate.getSeconds() - 60) % 60;\n\n  // Calculate the seconds offset based on the timezone offset.\n  const secondsOffset = Math.round(-((0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(date.timeZone, date) * 60)) % 60;\n  if (secondsOffset || systemSecondsOffset) {\n    date.internal.setUTCSeconds(date.internal.getUTCSeconds() + secondsOffset);\n    Date.prototype.setUTCSeconds.call(date, Date.prototype.getUTCSeconds.call(date) + secondsOffset + systemSecondsOffset);\n  }\n\n  //#endregion\n\n  //#region Post-adjustment DST fix\n\n  const postBaseOffset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(date.timeZone, date);\n  // Remove the seconds offset\n  // use Math.floor for negative GMT timezones and Math.ceil for positive GMT timezones.\n  const postOffset = postBaseOffset > 0 ? Math.floor(postBaseOffset) : Math.ceil(postBaseOffset);\n  const postSystemOffset = -new Date(+date).getTimezoneOffset();\n  const postOffsetDiff = postSystemOffset - postOffset;\n  const offsetChanged = postOffset !== offset;\n  const postDiff = postOffsetDiff - offsetDiff;\n  if (offsetChanged && postDiff) {\n    Date.prototype.setUTCMinutes.call(date, Date.prototype.getUTCMinutes.call(date) + postDiff);\n\n    // Now we need to check if got offset change during the post-adjustment.\n    // If so, we also need both dates to reflect that.\n\n    const newBaseOffset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(date.timeZone, date);\n    // Remove the seconds offset\n    // use Math.floor for negative GMT timezones and Math.ceil for positive GMT timezones.\n    const newOffset = newBaseOffset > 0 ? Math.floor(newBaseOffset) : Math.ceil(newBaseOffset);\n    const offsetChange = postOffset - newOffset;\n    if (offsetChange) {\n      date.internal.setUTCMinutes(date.internal.getUTCMinutes() + offsetChange);\n      Date.prototype.setUTCMinutes.call(date, Date.prototype.getUTCMinutes.call(date) + offsetChange);\n    }\n  }\n\n  //#endregion\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@date-fns/tz/date/mini.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@date-fns/tz/index.js":
/*!********************************************!*\
  !*** ./node_modules/@date-fns/tz/index.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TZDate: () => (/* reexport safe */ _date_index_js__WEBPACK_IMPORTED_MODULE_1__.TZDate),\n/* harmony export */   TZDateMini: () => (/* reexport safe */ _date_mini_js__WEBPACK_IMPORTED_MODULE_2__.TZDateMini),\n/* harmony export */   constructFromSymbol: () => (/* reexport safe */ _constants_index_js__WEBPACK_IMPORTED_MODULE_0__.constructFromSymbol),\n/* harmony export */   tz: () => (/* reexport safe */ _tz_index_js__WEBPACK_IMPORTED_MODULE_3__.tz),\n/* harmony export */   tzName: () => (/* reexport safe */ _tzName_index_js__WEBPACK_IMPORTED_MODULE_6__.tzName),\n/* harmony export */   tzOffset: () => (/* reexport safe */ _tzOffset_index_js__WEBPACK_IMPORTED_MODULE_4__.tzOffset),\n/* harmony export */   tzScan: () => (/* reexport safe */ _tzScan_index_js__WEBPACK_IMPORTED_MODULE_5__.tzScan)\n/* harmony export */ });\n/* harmony import */ var _constants_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants/index.js */ \"(ssr)/./node_modules/@date-fns/tz/constants/index.js\");\n/* harmony import */ var _date_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./date/index.js */ \"(ssr)/./node_modules/@date-fns/tz/date/index.js\");\n/* harmony import */ var _date_mini_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./date/mini.js */ \"(ssr)/./node_modules/@date-fns/tz/date/mini.js\");\n/* harmony import */ var _tz_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tz/index.js */ \"(ssr)/./node_modules/@date-fns/tz/tz/index.js\");\n/* harmony import */ var _tzOffset_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./tzOffset/index.js */ \"(ssr)/./node_modules/@date-fns/tz/tzOffset/index.js\");\n/* harmony import */ var _tzScan_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./tzScan/index.js */ \"(ssr)/./node_modules/@date-fns/tz/tzScan/index.js\");\n/* harmony import */ var _tzName_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./tzName/index.js */ \"(ssr)/./node_modules/@date-fns/tz/tzName/index.js\");\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRhdGUtZm5zL3R6L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXFDO0FBQ0w7QUFDRDtBQUNEO0FBQ007QUFDRiIsInNvdXJjZXMiOlsiL1VzZXJzL3N0ZXZlaGFycmlzL0RvY3VtZW50cy9HaXRIdWIvc3RhcnRlci0xL2RlbW8tYXBwL25vZGVfbW9kdWxlcy9AZGF0ZS1mbnMvdHovaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vY29uc3RhbnRzL2luZGV4LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9kYXRlL2luZGV4LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9kYXRlL21pbmkuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3R6L2luZGV4LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi90ek9mZnNldC9pbmRleC5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vdHpTY2FuL2luZGV4LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi90ek5hbWUvaW5kZXguanNcIjsiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@date-fns/tz/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@date-fns/tz/tz/index.js":
/*!***********************************************!*\
  !*** ./node_modules/@date-fns/tz/tz/index.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tz: () => (/* binding */ tz)\n/* harmony export */ });\n/* harmony import */ var _date_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../date/index.js */ \"(ssr)/./node_modules/@date-fns/tz/date/index.js\");\n\n\n/**\n * The function creates accepts a time zone and returns a function that creates\n * a new `TZDate` instance in the time zone from the provided value. Use it to\n * provide the context for the date-fns functions, via the `in` option.\n *\n * @param timeZone - Time zone name (IANA or UTC offset)\n *\n * @returns Function that creates a new `TZDate` instance in the time zone\n */\nconst tz = timeZone => value => _date_index_js__WEBPACK_IMPORTED_MODULE_0__.TZDate.tz(timeZone, +new Date(value));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRhdGUtZm5zL3R6L3R6L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTBDOztBQUUxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxnQ0FBZ0Msa0RBQU0iLCJzb3VyY2VzIjpbIi9Vc2Vycy9zdGV2ZWhhcnJpcy9Eb2N1bWVudHMvR2l0SHViL3N0YXJ0ZXItMS9kZW1vLWFwcC9ub2RlX21vZHVsZXMvQGRhdGUtZm5zL3R6L3R6L2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRaRGF0ZSB9IGZyb20gXCIuLi9kYXRlL2luZGV4LmpzXCI7XG5cbi8qKlxuICogVGhlIGZ1bmN0aW9uIGNyZWF0ZXMgYWNjZXB0cyBhIHRpbWUgem9uZSBhbmQgcmV0dXJucyBhIGZ1bmN0aW9uIHRoYXQgY3JlYXRlc1xuICogYSBuZXcgYFRaRGF0ZWAgaW5zdGFuY2UgaW4gdGhlIHRpbWUgem9uZSBmcm9tIHRoZSBwcm92aWRlZCB2YWx1ZS4gVXNlIGl0IHRvXG4gKiBwcm92aWRlIHRoZSBjb250ZXh0IGZvciB0aGUgZGF0ZS1mbnMgZnVuY3Rpb25zLCB2aWEgdGhlIGBpbmAgb3B0aW9uLlxuICpcbiAqIEBwYXJhbSB0aW1lWm9uZSAtIFRpbWUgem9uZSBuYW1lIChJQU5BIG9yIFVUQyBvZmZzZXQpXG4gKlxuICogQHJldHVybnMgRnVuY3Rpb24gdGhhdCBjcmVhdGVzIGEgbmV3IGBUWkRhdGVgIGluc3RhbmNlIGluIHRoZSB0aW1lIHpvbmVcbiAqL1xuZXhwb3J0IGNvbnN0IHR6ID0gdGltZVpvbmUgPT4gdmFsdWUgPT4gVFpEYXRlLnR6KHRpbWVab25lLCArbmV3IERhdGUodmFsdWUpKTsiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@date-fns/tz/tz/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@date-fns/tz/tzName/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@date-fns/tz/tzName/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tzName: () => (/* binding */ tzName)\n/* harmony export */ });\n/**\n * Time zone name format.\n */\n\n/**\n * The function returns the time zone name for the given date in the specified\n * time zone.\n *\n * It uses the `Intl.DateTimeFormat` API and by default outputs the time zone\n * name in a long format, e.g. \"Pacific Standard Time\" or\n * \"Singapore Standard Time\".\n *\n * It is possible to specify the format as the third argument using one of the following options\n *\n * - \"short\": e.g. \"EDT\" or \"GMT+8\".\n * - \"long\": e.g. \"Eastern Daylight Time\".\n * - \"shortGeneric\": e.g. \"ET\" or \"Singapore Time\".\n * - \"longGeneric\": e.g. \"Eastern Time\" or \"Singapore Standard Time\".\n *\n * These options correspond to TR35 tokens `z..zzz`, `zzzz`, `v`, and `vvvv` respectively: https://www.unicode.org/reports/tr35/tr35-dates.html#dfst-zone\n *\n * @param timeZone - Time zone name (IANA or UTC offset)\n * @param date - Date object to get the time zone name for\n * @param format - Optional format of the time zone name. Defaults to \"long\". Can be \"short\", \"long\", \"shortGeneric\", or \"longGeneric\".\n *\n * @returns Time zone name (e.g. \"Singapore Standard Time\")\n */\nfunction tzName(timeZone, date, format = \"long\") {\n  return new Intl.DateTimeFormat(\"en-US\", {\n    // Enforces engine to render the time. Without the option JavaScriptCore omits it.\n    hour: \"numeric\",\n    timeZone: timeZone,\n    timeZoneName: format\n  }).format(date).split(/\\s/g) // Format.JS uses non-breaking spaces\n  .slice(2) // Skip the hour and AM/PM parts\n  .join(\" \");\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRhdGUtZm5zL3R6L3R6TmFtZS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvc3RldmVoYXJyaXMvRG9jdW1lbnRzL0dpdEh1Yi9zdGFydGVyLTEvZGVtby1hcHAvbm9kZV9tb2R1bGVzL0BkYXRlLWZucy90ei90ek5hbWUvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUaW1lIHpvbmUgbmFtZSBmb3JtYXQuXG4gKi9cblxuLyoqXG4gKiBUaGUgZnVuY3Rpb24gcmV0dXJucyB0aGUgdGltZSB6b25lIG5hbWUgZm9yIHRoZSBnaXZlbiBkYXRlIGluIHRoZSBzcGVjaWZpZWRcbiAqIHRpbWUgem9uZS5cbiAqXG4gKiBJdCB1c2VzIHRoZSBgSW50bC5EYXRlVGltZUZvcm1hdGAgQVBJIGFuZCBieSBkZWZhdWx0IG91dHB1dHMgdGhlIHRpbWUgem9uZVxuICogbmFtZSBpbiBhIGxvbmcgZm9ybWF0LCBlLmcuIFwiUGFjaWZpYyBTdGFuZGFyZCBUaW1lXCIgb3JcbiAqIFwiU2luZ2Fwb3JlIFN0YW5kYXJkIFRpbWVcIi5cbiAqXG4gKiBJdCBpcyBwb3NzaWJsZSB0byBzcGVjaWZ5IHRoZSBmb3JtYXQgYXMgdGhlIHRoaXJkIGFyZ3VtZW50IHVzaW5nIG9uZSBvZiB0aGUgZm9sbG93aW5nIG9wdGlvbnNcbiAqXG4gKiAtIFwic2hvcnRcIjogZS5nLiBcIkVEVFwiIG9yIFwiR01UKzhcIi5cbiAqIC0gXCJsb25nXCI6IGUuZy4gXCJFYXN0ZXJuIERheWxpZ2h0IFRpbWVcIi5cbiAqIC0gXCJzaG9ydEdlbmVyaWNcIjogZS5nLiBcIkVUXCIgb3IgXCJTaW5nYXBvcmUgVGltZVwiLlxuICogLSBcImxvbmdHZW5lcmljXCI6IGUuZy4gXCJFYXN0ZXJuIFRpbWVcIiBvciBcIlNpbmdhcG9yZSBTdGFuZGFyZCBUaW1lXCIuXG4gKlxuICogVGhlc2Ugb3B0aW9ucyBjb3JyZXNwb25kIHRvIFRSMzUgdG9rZW5zIGB6Li56enpgLCBgenp6emAsIGB2YCwgYW5kIGB2dnZ2YCByZXNwZWN0aXZlbHk6IGh0dHBzOi8vd3d3LnVuaWNvZGUub3JnL3JlcG9ydHMvdHIzNS90cjM1LWRhdGVzLmh0bWwjZGZzdC16b25lXG4gKlxuICogQHBhcmFtIHRpbWVab25lIC0gVGltZSB6b25lIG5hbWUgKElBTkEgb3IgVVRDIG9mZnNldClcbiAqIEBwYXJhbSBkYXRlIC0gRGF0ZSBvYmplY3QgdG8gZ2V0IHRoZSB0aW1lIHpvbmUgbmFtZSBmb3JcbiAqIEBwYXJhbSBmb3JtYXQgLSBPcHRpb25hbCBmb3JtYXQgb2YgdGhlIHRpbWUgem9uZSBuYW1lLiBEZWZhdWx0cyB0byBcImxvbmdcIi4gQ2FuIGJlIFwic2hvcnRcIiwgXCJsb25nXCIsIFwic2hvcnRHZW5lcmljXCIsIG9yIFwibG9uZ0dlbmVyaWNcIi5cbiAqXG4gKiBAcmV0dXJucyBUaW1lIHpvbmUgbmFtZSAoZS5nLiBcIlNpbmdhcG9yZSBTdGFuZGFyZCBUaW1lXCIpXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0ek5hbWUodGltZVpvbmUsIGRhdGUsIGZvcm1hdCA9IFwibG9uZ1wiKSB7XG4gIHJldHVybiBuZXcgSW50bC5EYXRlVGltZUZvcm1hdChcImVuLVVTXCIsIHtcbiAgICAvLyBFbmZvcmNlcyBlbmdpbmUgdG8gcmVuZGVyIHRoZSB0aW1lLiBXaXRob3V0IHRoZSBvcHRpb24gSmF2YVNjcmlwdENvcmUgb21pdHMgaXQuXG4gICAgaG91cjogXCJudW1lcmljXCIsXG4gICAgdGltZVpvbmU6IHRpbWVab25lLFxuICAgIHRpbWVab25lTmFtZTogZm9ybWF0XG4gIH0pLmZvcm1hdChkYXRlKS5zcGxpdCgvXFxzL2cpIC8vIEZvcm1hdC5KUyB1c2VzIG5vbi1icmVha2luZyBzcGFjZXNcbiAgLnNsaWNlKDIpIC8vIFNraXAgdGhlIGhvdXIgYW5kIEFNL1BNIHBhcnRzXG4gIC5qb2luKFwiIFwiKTtcbn0iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@date-fns/tz/tzName/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@date-fns/tz/tzOffset/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/@date-fns/tz/tzOffset/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tzOffset: () => (/* binding */ tzOffset)\n/* harmony export */ });\nconst offsetFormatCache = {};\nconst offsetCache = {};\n\n/**\n * The function extracts UTC offset in minutes from the given date in specified\n * time zone.\n *\n * Unlike `Date.prototype.getTimezoneOffset`, this function returns the value\n * mirrored to the sign of the offset in the time zone. For Asia/Singapore\n * (UTC+8), `tzOffset` returns 480, while `getTimezoneOffset` returns -480.\n *\n * @param timeZone - Time zone name (IANA or UTC offset)\n * @param date - Date to check the offset for\n *\n * @returns UTC offset in minutes\n */\nfunction tzOffset(timeZone, date) {\n  try {\n    const format = offsetFormatCache[timeZone] ||= new Intl.DateTimeFormat(\"en-US\", {\n      timeZone,\n      timeZoneName: \"longOffset\"\n    }).format;\n    const offsetStr = format(date).split(\"GMT\")[1];\n    if (offsetStr in offsetCache) return offsetCache[offsetStr];\n    return calcOffset(offsetStr, offsetStr.split(\":\"));\n  } catch {\n    // Fallback to manual parsing if the runtime doesn't support ±HH:MM/±HHMM/±HH\n    // See: https://github.com/nodejs/node/issues/53419\n    if (timeZone in offsetCache) return offsetCache[timeZone];\n    const captures = timeZone?.match(offsetRe);\n    if (captures) return calcOffset(timeZone, captures.slice(1));\n    return NaN;\n  }\n}\nconst offsetRe = /([+-]\\d\\d):?(\\d\\d)?/;\nfunction calcOffset(cacheStr, values) {\n  const hours = +(values[0] || 0);\n  const minutes = +(values[1] || 0);\n  // Convert seconds to minutes by dividing by 60 to keep the function return in minutes.\n  const seconds = +(values[2] || 0) / 60;\n  return offsetCache[cacheStr] = hours * 60 + minutes > 0 ? hours * 60 + minutes + seconds : hours * 60 - minutes - seconds;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRhdGUtZm5zL3R6L3R6T2Zmc2V0L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zdGV2ZWhhcnJpcy9Eb2N1bWVudHMvR2l0SHViL3N0YXJ0ZXItMS9kZW1vLWFwcC9ub2RlX21vZHVsZXMvQGRhdGUtZm5zL3R6L3R6T2Zmc2V0L2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG9mZnNldEZvcm1hdENhY2hlID0ge307XG5jb25zdCBvZmZzZXRDYWNoZSA9IHt9O1xuXG4vKipcbiAqIFRoZSBmdW5jdGlvbiBleHRyYWN0cyBVVEMgb2Zmc2V0IGluIG1pbnV0ZXMgZnJvbSB0aGUgZ2l2ZW4gZGF0ZSBpbiBzcGVjaWZpZWRcbiAqIHRpbWUgem9uZS5cbiAqXG4gKiBVbmxpa2UgYERhdGUucHJvdG90eXBlLmdldFRpbWV6b25lT2Zmc2V0YCwgdGhpcyBmdW5jdGlvbiByZXR1cm5zIHRoZSB2YWx1ZVxuICogbWlycm9yZWQgdG8gdGhlIHNpZ24gb2YgdGhlIG9mZnNldCBpbiB0aGUgdGltZSB6b25lLiBGb3IgQXNpYS9TaW5nYXBvcmVcbiAqIChVVEMrOCksIGB0ek9mZnNldGAgcmV0dXJucyA0ODAsIHdoaWxlIGBnZXRUaW1lem9uZU9mZnNldGAgcmV0dXJucyAtNDgwLlxuICpcbiAqIEBwYXJhbSB0aW1lWm9uZSAtIFRpbWUgem9uZSBuYW1lIChJQU5BIG9yIFVUQyBvZmZzZXQpXG4gKiBAcGFyYW0gZGF0ZSAtIERhdGUgdG8gY2hlY2sgdGhlIG9mZnNldCBmb3JcbiAqXG4gKiBAcmV0dXJucyBVVEMgb2Zmc2V0IGluIG1pbnV0ZXNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHR6T2Zmc2V0KHRpbWVab25lLCBkYXRlKSB7XG4gIHRyeSB7XG4gICAgY29uc3QgZm9ybWF0ID0gb2Zmc2V0Rm9ybWF0Q2FjaGVbdGltZVpvbmVdIHx8PSBuZXcgSW50bC5EYXRlVGltZUZvcm1hdChcImVuLVVTXCIsIHtcbiAgICAgIHRpbWVab25lLFxuICAgICAgdGltZVpvbmVOYW1lOiBcImxvbmdPZmZzZXRcIlxuICAgIH0pLmZvcm1hdDtcbiAgICBjb25zdCBvZmZzZXRTdHIgPSBmb3JtYXQoZGF0ZSkuc3BsaXQoXCJHTVRcIilbMV07XG4gICAgaWYgKG9mZnNldFN0ciBpbiBvZmZzZXRDYWNoZSkgcmV0dXJuIG9mZnNldENhY2hlW29mZnNldFN0cl07XG4gICAgcmV0dXJuIGNhbGNPZmZzZXQob2Zmc2V0U3RyLCBvZmZzZXRTdHIuc3BsaXQoXCI6XCIpKTtcbiAgfSBjYXRjaCB7XG4gICAgLy8gRmFsbGJhY2sgdG8gbWFudWFsIHBhcnNpbmcgaWYgdGhlIHJ1bnRpbWUgZG9lc24ndCBzdXBwb3J0IMKxSEg6TU0vwrFISE1NL8KxSEhcbiAgICAvLyBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9ub2RlanMvbm9kZS9pc3N1ZXMvNTM0MTlcbiAgICBpZiAodGltZVpvbmUgaW4gb2Zmc2V0Q2FjaGUpIHJldHVybiBvZmZzZXRDYWNoZVt0aW1lWm9uZV07XG4gICAgY29uc3QgY2FwdHVyZXMgPSB0aW1lWm9uZT8ubWF0Y2gob2Zmc2V0UmUpO1xuICAgIGlmIChjYXB0dXJlcykgcmV0dXJuIGNhbGNPZmZzZXQodGltZVpvbmUsIGNhcHR1cmVzLnNsaWNlKDEpKTtcbiAgICByZXR1cm4gTmFOO1xuICB9XG59XG5jb25zdCBvZmZzZXRSZSA9IC8oWystXVxcZFxcZCk6PyhcXGRcXGQpPy87XG5mdW5jdGlvbiBjYWxjT2Zmc2V0KGNhY2hlU3RyLCB2YWx1ZXMpIHtcbiAgY29uc3QgaG91cnMgPSArKHZhbHVlc1swXSB8fCAwKTtcbiAgY29uc3QgbWludXRlcyA9ICsodmFsdWVzWzFdIHx8IDApO1xuICAvLyBDb252ZXJ0IHNlY29uZHMgdG8gbWludXRlcyBieSBkaXZpZGluZyBieSA2MCB0byBrZWVwIHRoZSBmdW5jdGlvbiByZXR1cm4gaW4gbWludXRlcy5cbiAgY29uc3Qgc2Vjb25kcyA9ICsodmFsdWVzWzJdIHx8IDApIC8gNjA7XG4gIHJldHVybiBvZmZzZXRDYWNoZVtjYWNoZVN0cl0gPSBob3VycyAqIDYwICsgbWludXRlcyA+IDAgPyBob3VycyAqIDYwICsgbWludXRlcyArIHNlY29uZHMgOiBob3VycyAqIDYwIC0gbWludXRlcyAtIHNlY29uZHM7XG59Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@date-fns/tz/tzOffset/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@date-fns/tz/tzScan/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@date-fns/tz/tzScan/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tzScan: () => (/* binding */ tzScan)\n/* harmony export */ });\n/* harmony import */ var _tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tzOffset/index.js */ \"(ssr)/./node_modules/@date-fns/tz/tzOffset/index.js\");\n\n\n/**\n * Time interval.\n */\n\n/**\n * Time zone change record.\n */\n\n/**\n * The function scans the time zone for changes in the given interval.\n *\n * @param timeZone - Time zone name (IANA or UTC offset)\n * @param interval - Time interval to scan for changes\n *\n * @returns Array of time zone changes\n */\nfunction tzScan(timeZone, interval) {\n  const changes = [];\n  const monthDate = new Date(interval.start);\n  monthDate.setUTCSeconds(0, 0);\n  const endDate = new Date(interval.end);\n  endDate.setUTCSeconds(0, 0);\n  const endMonthTime = +endDate;\n  let lastOffset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(timeZone, monthDate);\n  while (+monthDate < endMonthTime) {\n    // Month forward\n    monthDate.setUTCMonth(monthDate.getUTCMonth() + 1);\n\n    // Find the month where the offset changes\n    const offset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(timeZone, monthDate);\n    if (offset != lastOffset) {\n      // Rewind a month back to find the day where the offset changes\n      const dayDate = new Date(monthDate);\n      dayDate.setUTCMonth(dayDate.getUTCMonth() - 1);\n      const endDayTime = +monthDate;\n      lastOffset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(timeZone, dayDate);\n      while (+dayDate < endDayTime) {\n        // Day forward\n        dayDate.setUTCDate(dayDate.getUTCDate() + 1);\n\n        // Find the day where the offset changes\n        const offset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(timeZone, dayDate);\n        if (offset != lastOffset) {\n          // Rewind a day back to find the time where the offset changes\n          const hourDate = new Date(dayDate);\n          hourDate.setUTCDate(hourDate.getUTCDate() - 1);\n          const endHourTime = +dayDate;\n          lastOffset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(timeZone, hourDate);\n          while (+hourDate < endHourTime) {\n            // Hour forward\n            hourDate.setUTCHours(hourDate.getUTCHours() + 1);\n\n            // Find the hour where the offset changes\n            const hourOffset = (0,_tzOffset_index_js__WEBPACK_IMPORTED_MODULE_0__.tzOffset)(timeZone, hourDate);\n            if (hourOffset !== lastOffset) {\n              changes.push({\n                date: new Date(hourDate),\n                change: hourOffset - lastOffset,\n                offset: hourOffset\n              });\n            }\n            lastOffset = hourOffset;\n          }\n        }\n        lastOffset = offset;\n      }\n    }\n    lastOffset = offset;\n  }\n  return changes;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRhdGUtZm5zL3R6L3R6U2Nhbi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFnRDs7QUFFaEQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsNERBQVE7QUFDM0I7QUFDQTtBQUNBOztBQUVBO0FBQ0EsbUJBQW1CLDREQUFRO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsNERBQVE7QUFDM0I7QUFDQTtBQUNBOztBQUVBO0FBQ0EsdUJBQXVCLDREQUFRO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsNERBQVE7QUFDL0I7QUFDQTtBQUNBOztBQUVBO0FBQ0EsK0JBQStCLDREQUFRO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3N0ZXZlaGFycmlzL0RvY3VtZW50cy9HaXRIdWIvc3RhcnRlci0xL2RlbW8tYXBwL25vZGVfbW9kdWxlcy9AZGF0ZS1mbnMvdHovdHpTY2FuL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHR6T2Zmc2V0IH0gZnJvbSBcIi4uL3R6T2Zmc2V0L2luZGV4LmpzXCI7XG5cbi8qKlxuICogVGltZSBpbnRlcnZhbC5cbiAqL1xuXG4vKipcbiAqIFRpbWUgem9uZSBjaGFuZ2UgcmVjb3JkLlxuICovXG5cbi8qKlxuICogVGhlIGZ1bmN0aW9uIHNjYW5zIHRoZSB0aW1lIHpvbmUgZm9yIGNoYW5nZXMgaW4gdGhlIGdpdmVuIGludGVydmFsLlxuICpcbiAqIEBwYXJhbSB0aW1lWm9uZSAtIFRpbWUgem9uZSBuYW1lIChJQU5BIG9yIFVUQyBvZmZzZXQpXG4gKiBAcGFyYW0gaW50ZXJ2YWwgLSBUaW1lIGludGVydmFsIHRvIHNjYW4gZm9yIGNoYW5nZXNcbiAqXG4gKiBAcmV0dXJucyBBcnJheSBvZiB0aW1lIHpvbmUgY2hhbmdlc1xuICovXG5leHBvcnQgZnVuY3Rpb24gdHpTY2FuKHRpbWVab25lLCBpbnRlcnZhbCkge1xuICBjb25zdCBjaGFuZ2VzID0gW107XG4gIGNvbnN0IG1vbnRoRGF0ZSA9IG5ldyBEYXRlKGludGVydmFsLnN0YXJ0KTtcbiAgbW9udGhEYXRlLnNldFVUQ1NlY29uZHMoMCwgMCk7XG4gIGNvbnN0IGVuZERhdGUgPSBuZXcgRGF0ZShpbnRlcnZhbC5lbmQpO1xuICBlbmREYXRlLnNldFVUQ1NlY29uZHMoMCwgMCk7XG4gIGNvbnN0IGVuZE1vbnRoVGltZSA9ICtlbmREYXRlO1xuICBsZXQgbGFzdE9mZnNldCA9IHR6T2Zmc2V0KHRpbWVab25lLCBtb250aERhdGUpO1xuICB3aGlsZSAoK21vbnRoRGF0ZSA8IGVuZE1vbnRoVGltZSkge1xuICAgIC8vIE1vbnRoIGZvcndhcmRcbiAgICBtb250aERhdGUuc2V0VVRDTW9udGgobW9udGhEYXRlLmdldFVUQ01vbnRoKCkgKyAxKTtcblxuICAgIC8vIEZpbmQgdGhlIG1vbnRoIHdoZXJlIHRoZSBvZmZzZXQgY2hhbmdlc1xuICAgIGNvbnN0IG9mZnNldCA9IHR6T2Zmc2V0KHRpbWVab25lLCBtb250aERhdGUpO1xuICAgIGlmIChvZmZzZXQgIT0gbGFzdE9mZnNldCkge1xuICAgICAgLy8gUmV3aW5kIGEgbW9udGggYmFjayB0byBmaW5kIHRoZSBkYXkgd2hlcmUgdGhlIG9mZnNldCBjaGFuZ2VzXG4gICAgICBjb25zdCBkYXlEYXRlID0gbmV3IERhdGUobW9udGhEYXRlKTtcbiAgICAgIGRheURhdGUuc2V0VVRDTW9udGgoZGF5RGF0ZS5nZXRVVENNb250aCgpIC0gMSk7XG4gICAgICBjb25zdCBlbmREYXlUaW1lID0gK21vbnRoRGF0ZTtcbiAgICAgIGxhc3RPZmZzZXQgPSB0ek9mZnNldCh0aW1lWm9uZSwgZGF5RGF0ZSk7XG4gICAgICB3aGlsZSAoK2RheURhdGUgPCBlbmREYXlUaW1lKSB7XG4gICAgICAgIC8vIERheSBmb3J3YXJkXG4gICAgICAgIGRheURhdGUuc2V0VVRDRGF0ZShkYXlEYXRlLmdldFVUQ0RhdGUoKSArIDEpO1xuXG4gICAgICAgIC8vIEZpbmQgdGhlIGRheSB3aGVyZSB0aGUgb2Zmc2V0IGNoYW5nZXNcbiAgICAgICAgY29uc3Qgb2Zmc2V0ID0gdHpPZmZzZXQodGltZVpvbmUsIGRheURhdGUpO1xuICAgICAgICBpZiAob2Zmc2V0ICE9IGxhc3RPZmZzZXQpIHtcbiAgICAgICAgICAvLyBSZXdpbmQgYSBkYXkgYmFjayB0byBmaW5kIHRoZSB0aW1lIHdoZXJlIHRoZSBvZmZzZXQgY2hhbmdlc1xuICAgICAgICAgIGNvbnN0IGhvdXJEYXRlID0gbmV3IERhdGUoZGF5RGF0ZSk7XG4gICAgICAgICAgaG91ckRhdGUuc2V0VVRDRGF0ZShob3VyRGF0ZS5nZXRVVENEYXRlKCkgLSAxKTtcbiAgICAgICAgICBjb25zdCBlbmRIb3VyVGltZSA9ICtkYXlEYXRlO1xuICAgICAgICAgIGxhc3RPZmZzZXQgPSB0ek9mZnNldCh0aW1lWm9uZSwgaG91ckRhdGUpO1xuICAgICAgICAgIHdoaWxlICgraG91ckRhdGUgPCBlbmRIb3VyVGltZSkge1xuICAgICAgICAgICAgLy8gSG91ciBmb3J3YXJkXG4gICAgICAgICAgICBob3VyRGF0ZS5zZXRVVENIb3Vycyhob3VyRGF0ZS5nZXRVVENIb3VycygpICsgMSk7XG5cbiAgICAgICAgICAgIC8vIEZpbmQgdGhlIGhvdXIgd2hlcmUgdGhlIG9mZnNldCBjaGFuZ2VzXG4gICAgICAgICAgICBjb25zdCBob3VyT2Zmc2V0ID0gdHpPZmZzZXQodGltZVpvbmUsIGhvdXJEYXRlKTtcbiAgICAgICAgICAgIGlmIChob3VyT2Zmc2V0ICE9PSBsYXN0T2Zmc2V0KSB7XG4gICAgICAgICAgICAgIGNoYW5nZXMucHVzaCh7XG4gICAgICAgICAgICAgICAgZGF0ZTogbmV3IERhdGUoaG91ckRhdGUpLFxuICAgICAgICAgICAgICAgIGNoYW5nZTogaG91ck9mZnNldCAtIGxhc3RPZmZzZXQsXG4gICAgICAgICAgICAgICAgb2Zmc2V0OiBob3VyT2Zmc2V0XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGFzdE9mZnNldCA9IGhvdXJPZmZzZXQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGxhc3RPZmZzZXQgPSBvZmZzZXQ7XG4gICAgICB9XG4gICAgfVxuICAgIGxhc3RPZmZzZXQgPSBvZmZzZXQ7XG4gIH1cbiAgcmV0dXJuIGNoYW5nZXM7XG59Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@date-fns/tz/tzScan/index.js\n");

/***/ })

};
;